<configuration>
    <property name="LOG_FILE" value="${BUILD_FOLDER:-build}/${appName:-myapp}"/>
    <property name="LOG_FILE2" value="${BUILD_FOLDER:-build}/1234"/>
    <springProperty scope="context" name="appName" source="spring.application.name" defaultValue="myapplication" />
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
<!--        <file>${LOG_FILE}.%d{yyyy-MM-dd}.json</file>-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- daily rollover -->
            <fileNamePattern>${BUILD_FOLDER:-log}/${appName}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- keep 30 days' worth of history capped at 3GB total size -->
<!--            <maxHistory>30</maxHistory>-->
<!--            <totalSizeCap>3GB</totalSizeCap>-->
            <maxHistory>1</maxHistory>
<!--            超过这个容量就会删除以前的-->
            <totalSizeCap>15KB</totalSizeCap>
<!--            配置了这个属性上面fileNamePattern就会硬性要求配置%i,代表滚动次数-->
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--文件达到 最大值时会被压缩和切割 -->
                <maxFileSize>5KB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--logstash-->
    <appender name="LOGSTASH"
              class="net.logstash.logback.appender.LogstashTcpSocketAppender">
        <filter class="xb.log.SampleFilter"></filter>
        <!--配置logStash 服务地址 -->
        <destination>127.0.0.1:4560</destination>
        <!-- 日志输出编码 -->
        <encoder charset="UTF-8"
                 class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <timeZone>UTC</timeZone>
                </timestamp>
<!--                此处应该有2个pattern标签，否则输出到logstash的日志会只有@timestamps和@version-->
                <pattern>
                    <pattern>
                        {
                        "logLevel": "%level",
                        "serviceName": "${appName:-}",
                        "pid": "${PID:-}",
                        "thread": "%thread",
                        "class": "%logger{40}",
                        "rest": "%message"
                        }
                    </pattern>
                </pattern>

            </providers>
        </encoder>
    </appender>

    <!--region encoder-->
<!-- 9.9:最小宽9最大宽9 -9.9:最小宽9最大宽9并且左对齐 logger:日志的生产者 %-5level日志等级被调整为向左5个字符宽 relative从应用启动到日志输出为止的时间 thread线程名称-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!--@see https://logback.qos.ch/manual/layouts.html-->
            <pattern>%9.9relative [%10.10thread] %date{yyyy-MM-dd hh:mm:ss} %highlight(%-5level) %40.40logger{35} %yellow(---) %msg %n</pattern>
        </encoder>
    </appender>

<!--    日志标红，可以用来检测配置文件是否生效了-->
    <!--color contains :"%black", "%red", "%green","%yellow","%blue", "%magenta","%cyan", "%white", "%gray",
  "%boldRed","%boldGreen", "%boldYellow", "%boldBlue", "%boldMagenta""%boldCyan", "%boldWhite" and "%highlight" -->
    <appender name="STDOUT_RED" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="xb.log.SampleFilter"></filter>
        <encoder>
            <pattern>%red(%-4relative [%thread] %-5level %logger{35} - %msg) %n</pattern>
        </encoder>
    </appender>

    <!--根据SampleFilter来过滤日志--><appender name="STDOUT_FILTER" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="xb.log.SampleFilter"></filter>
        <encoder>
            <pattern>%-4relative [%thread] %-5level %logger{35} - %msg %n</pattern>
        </encoder>
    </appender>

    <!--根据evaluator来打印caller-->
    <!--<evaluator name="DISP_CALLER_EVAL">-->
    <!--</evaluator>-->
    <appender name="STDOUT_EVA" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n%caller{1}</pattern>
        </encoder>
    </appender>
    <!--endregion-->

    <root level="INFO">
<!--        配置几个appender就会打印几个日志，若包含相同内容，则会重复打印-->
<!--        <appender-ref ref="STDOUT"/>-->
        <appender-ref ref="STDOUT_RED"/>
<!--        <appender-ref ref="STDOUT_EVA"/>-->
<!--        <appender-ref ref="STDOUT_FILTER"/>-->
<!--        <appender-ref ref="FILE" />-->
<!--        <appender-ref ref="LOGSTASH"/>-->
    </root>
</configuration>